Terminals unused in grammar

    PERIOD
    UNKNOWN


Grammar

    0 $accept: prog $end

    1 prog: line
    2     | line prog

    3 line: directive_or_instruction
    4     | label directive_or_instruction

    5 label: IDENT COL

    6 directive_or_instruction: directive
    7                         | instruction
    8                         | ENDL

    9 directive: GLOBALDIR symbols
   10          | EXTERNDIR symbols
   11          | SECTIONDIR symbol
   12          | WORDDIR symbols_literals
   13          | SKIPDIR literal
   14          | ENDDIR

   15 instruction: no_param_instr
   16            | CALL operand_jmp
   17            | JMP operand_jmp
   18            | branch_instr REG COMMA REG COMMA operand_jmp
   19            | stack_instr
   20            | arithmetic_gpr2 REG COMMA REG
   21            | arithmetic_gpr1 REG
   22            | ld_st_instr
   23            | csr_instr
   24            | atomic_swap

   25 no_param_instr: HALT
   26               | INT
   27               | IRET
   28               | RET

   29 branch_instr: BEQ
   30             | BNE
   31             | BGT

   32 operand_jmp: literal
   33            | symbol

   34 stack_instr: POP REG
   35            | PUSH REG

   36 atomic_swap: XCHG REG COMMA REG

   37 arithmetic_gpr2: ADD
   38                | SUB
   39                | MUL
   40                | DIV
   41                | AND
   42                | OR
   43                | XOR
   44                | SHL
   45                | SHR

   46 arithmetic_gpr1: NOT

   47 ld_st_instr: LD operand_data COMMA REG
   48            | ST REG COMMA operand_data

   49 csr_instr: CSRRD CSR COMMA REG
   50          | CSRWR REG COMMA CSR

   51 operand_data: DOLLAR literal
   52             | DOLLAR symbol
   53             | literal
   54             | symbol
   55             | REG
   56             | LBRACK REG RBRACK
   57             | LBRACK REG PLUS literal RBRACK
   58             | LBRACK REG PLUS symbol RBRACK

   59 symbol: IDENT

   60 symbols: symbol
   61        | symbols COMMA symbol

   62 literals: literal
   63         | literals COMMA literal

   64 literal: NUMBER
   65        | PLUS NUMBER
   66        | MINUS NUMBER

   67 symbols_literals: symbols
   68                 | literals


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    REG <reg_num> (258) 18 20 21 34 35 36 47 48 49 50 55 56 57 58
    CSR <csr_num> (259) 49 50
    PLUS (260) 57 58 65
    MINUS (261) 66
    PERIOD (262)
    COL (263) 5
    DOLLAR (264) 51 52
    GLOBALDIR (265) 9
    EXTERNDIR (266) 10
    SECTIONDIR (267) 11
    WORDDIR (268) 12
    SKIPDIR (269) 13
    ENDDIR (270) 14
    HALT (271) 25
    INT (272) 26
    IRET (273) 27
    CALL (274) 16
    RET (275) 28
    JMP (276) 17
    BEQ (277) 29
    BNE (278) 30
    BGT (279) 31
    PUSH (280) 35
    POP (281) 34
    XCHG (282) 36
    ADD (283) 37
    SUB (284) 38
    MUL (285) 39
    DIV (286) 40
    NOT (287) 46
    AND (288) 41
    OR (289) 42
    XOR (290) 43
    SHL (291) 44
    SHR (292) 45
    LD (293) 47
    ST (294) 48
    CSRRD (295) 49
    CSRWR (296) 50
    UNKNOWN (297)
    ENDL (298) 8
    RBRACK (299) 56 57 58
    LBRACK (300) 56 57 58
    COMMA (301) 18 20 36 47 48 49 50 61 63
    NUMBER <number> (302) 64 65 66
    IDENT <ident> (303) 5 59


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    prog (50)
        on left: 1 2
        on right: 0 2
    line (51)
        on left: 3 4
        on right: 1 2
    label (52)
        on left: 5
        on right: 4
    directive_or_instruction (53)
        on left: 6 7 8
        on right: 3 4
    directive (54)
        on left: 9 10 11 12 13 14
        on right: 6
    instruction (55)
        on left: 15 16 17 18 19 20 21 22 23 24
        on right: 7
    no_param_instr (56)
        on left: 25 26 27 28
        on right: 15
    branch_instr (57)
        on left: 29 30 31
        on right: 18
    operand_jmp (58)
        on left: 32 33
        on right: 16 17 18
    stack_instr (59)
        on left: 34 35
        on right: 19
    atomic_swap (60)
        on left: 36
        on right: 24
    arithmetic_gpr2 (61)
        on left: 37 38 39 40 41 42 43 44 45
        on right: 20
    arithmetic_gpr1 (62)
        on left: 46
        on right: 21
    ld_st_instr (63)
        on left: 47 48
        on right: 22
    csr_instr (64)
        on left: 49 50
        on right: 23
    operand_data (65)
        on left: 51 52 53 54 55 56 57 58
        on right: 47 48
    symbol <ident> (66)
        on left: 59
        on right: 11 33 52 54 58 60 61
    symbols (67)
        on left: 60 61
        on right: 9 10 61 67
    literals (68)
        on left: 62 63
        on right: 63 68
    literal <number> (69)
        on left: 64 65 66
        on right: 13 32 51 53 57 62 63
    symbols_literals (70)
        on left: 67 68
        on right: 12


State 0

    0 $accept: . prog $end

    GLOBALDIR   shift, and go to state 1
    EXTERNDIR   shift, and go to state 2
    SECTIONDIR  shift, and go to state 3
    WORDDIR     shift, and go to state 4
    SKIPDIR     shift, and go to state 5
    ENDDIR      shift, and go to state 6
    HALT        shift, and go to state 7
    INT         shift, and go to state 8
    IRET        shift, and go to state 9
    CALL        shift, and go to state 10
    RET         shift, and go to state 11
    JMP         shift, and go to state 12
    BEQ         shift, and go to state 13
    BNE         shift, and go to state 14
    BGT         shift, and go to state 15
    PUSH        shift, and go to state 16
    POP         shift, and go to state 17
    XCHG        shift, and go to state 18
    ADD         shift, and go to state 19
    SUB         shift, and go to state 20
    MUL         shift, and go to state 21
    DIV         shift, and go to state 22
    NOT         shift, and go to state 23
    AND         shift, and go to state 24
    OR          shift, and go to state 25
    XOR         shift, and go to state 26
    SHL         shift, and go to state 27
    SHR         shift, and go to state 28
    LD          shift, and go to state 29
    ST          shift, and go to state 30
    CSRRD       shift, and go to state 31
    CSRWR       shift, and go to state 32
    ENDL        shift, and go to state 33
    IDENT       shift, and go to state 34

    prog                      go to state 35
    line                      go to state 36
    label                     go to state 37
    directive_or_instruction  go to state 38
    directive                 go to state 39
    instruction               go to state 40
    no_param_instr            go to state 41
    branch_instr              go to state 42
    stack_instr               go to state 43
    atomic_swap               go to state 44
    arithmetic_gpr2           go to state 45
    arithmetic_gpr1           go to state 46
    ld_st_instr               go to state 47
    csr_instr                 go to state 48


State 1

    9 directive: GLOBALDIR . symbols

    IDENT  shift, and go to state 49

    symbol   go to state 50
    symbols  go to state 51


State 2

   10 directive: EXTERNDIR . symbols

    IDENT  shift, and go to state 49

    symbol   go to state 50
    symbols  go to state 52


State 3

   11 directive: SECTIONDIR . symbol

    IDENT  shift, and go to state 49

    symbol  go to state 53


State 4

   12 directive: WORDDIR . symbols_literals

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    NUMBER  shift, and go to state 56
    IDENT   shift, and go to state 49

    symbol            go to state 50
    symbols           go to state 57
    literals          go to state 58
    literal           go to state 59
    symbols_literals  go to state 60


State 5

   13 directive: SKIPDIR . literal

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    NUMBER  shift, and go to state 56

    literal  go to state 61


State 6

   14 directive: ENDDIR .

    $default  reduce using rule 14 (directive)


State 7

   25 no_param_instr: HALT .

    $default  reduce using rule 25 (no_param_instr)


State 8

   26 no_param_instr: INT .

    $default  reduce using rule 26 (no_param_instr)


State 9

   27 no_param_instr: IRET .

    $default  reduce using rule 27 (no_param_instr)


State 10

   16 instruction: CALL . operand_jmp

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    NUMBER  shift, and go to state 56
    IDENT   shift, and go to state 49

    operand_jmp  go to state 62
    symbol       go to state 63
    literal      go to state 64


State 11

   28 no_param_instr: RET .

    $default  reduce using rule 28 (no_param_instr)


State 12

   17 instruction: JMP . operand_jmp

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    NUMBER  shift, and go to state 56
    IDENT   shift, and go to state 49

    operand_jmp  go to state 65
    symbol       go to state 63
    literal      go to state 64


State 13

   29 branch_instr: BEQ .

    $default  reduce using rule 29 (branch_instr)


State 14

   30 branch_instr: BNE .

    $default  reduce using rule 30 (branch_instr)


State 15

   31 branch_instr: BGT .

    $default  reduce using rule 31 (branch_instr)


State 16

   35 stack_instr: PUSH . REG

    REG  shift, and go to state 66


State 17

   34 stack_instr: POP . REG

    REG  shift, and go to state 67


State 18

   36 atomic_swap: XCHG . REG COMMA REG

    REG  shift, and go to state 68


State 19

   37 arithmetic_gpr2: ADD .

    $default  reduce using rule 37 (arithmetic_gpr2)


State 20

   38 arithmetic_gpr2: SUB .

    $default  reduce using rule 38 (arithmetic_gpr2)


State 21

   39 arithmetic_gpr2: MUL .

    $default  reduce using rule 39 (arithmetic_gpr2)


State 22

   40 arithmetic_gpr2: DIV .

    $default  reduce using rule 40 (arithmetic_gpr2)


State 23

   46 arithmetic_gpr1: NOT .

    $default  reduce using rule 46 (arithmetic_gpr1)


State 24

   41 arithmetic_gpr2: AND .

    $default  reduce using rule 41 (arithmetic_gpr2)


State 25

   42 arithmetic_gpr2: OR .

    $default  reduce using rule 42 (arithmetic_gpr2)


State 26

   43 arithmetic_gpr2: XOR .

    $default  reduce using rule 43 (arithmetic_gpr2)


State 27

   44 arithmetic_gpr2: SHL .

    $default  reduce using rule 44 (arithmetic_gpr2)


State 28

   45 arithmetic_gpr2: SHR .

    $default  reduce using rule 45 (arithmetic_gpr2)


State 29

   47 ld_st_instr: LD . operand_data COMMA REG

    REG     shift, and go to state 69
    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    DOLLAR  shift, and go to state 70
    LBRACK  shift, and go to state 71
    NUMBER  shift, and go to state 56
    IDENT   shift, and go to state 49

    operand_data  go to state 72
    symbol        go to state 73
    literal       go to state 74


State 30

   48 ld_st_instr: ST . REG COMMA operand_data

    REG  shift, and go to state 75


State 31

   49 csr_instr: CSRRD . CSR COMMA REG

    CSR  shift, and go to state 76


State 32

   50 csr_instr: CSRWR . REG COMMA CSR

    REG  shift, and go to state 77


State 33

    8 directive_or_instruction: ENDL .

    $default  reduce using rule 8 (directive_or_instruction)


State 34

    5 label: IDENT . COL

    COL  shift, and go to state 78


State 35

    0 $accept: prog . $end

    $end  shift, and go to state 79


State 36

    1 prog: line .
    2     | line . prog

    GLOBALDIR   shift, and go to state 1
    EXTERNDIR   shift, and go to state 2
    SECTIONDIR  shift, and go to state 3
    WORDDIR     shift, and go to state 4
    SKIPDIR     shift, and go to state 5
    ENDDIR      shift, and go to state 6
    HALT        shift, and go to state 7
    INT         shift, and go to state 8
    IRET        shift, and go to state 9
    CALL        shift, and go to state 10
    RET         shift, and go to state 11
    JMP         shift, and go to state 12
    BEQ         shift, and go to state 13
    BNE         shift, and go to state 14
    BGT         shift, and go to state 15
    PUSH        shift, and go to state 16
    POP         shift, and go to state 17
    XCHG        shift, and go to state 18
    ADD         shift, and go to state 19
    SUB         shift, and go to state 20
    MUL         shift, and go to state 21
    DIV         shift, and go to state 22
    NOT         shift, and go to state 23
    AND         shift, and go to state 24
    OR          shift, and go to state 25
    XOR         shift, and go to state 26
    SHL         shift, and go to state 27
    SHR         shift, and go to state 28
    LD          shift, and go to state 29
    ST          shift, and go to state 30
    CSRRD       shift, and go to state 31
    CSRWR       shift, and go to state 32
    ENDL        shift, and go to state 33
    IDENT       shift, and go to state 34

    $default  reduce using rule 1 (prog)

    prog                      go to state 80
    line                      go to state 36
    label                     go to state 37
    directive_or_instruction  go to state 38
    directive                 go to state 39
    instruction               go to state 40
    no_param_instr            go to state 41
    branch_instr              go to state 42
    stack_instr               go to state 43
    atomic_swap               go to state 44
    arithmetic_gpr2           go to state 45
    arithmetic_gpr1           go to state 46
    ld_st_instr               go to state 47
    csr_instr                 go to state 48


State 37

    4 line: label . directive_or_instruction

    GLOBALDIR   shift, and go to state 1
    EXTERNDIR   shift, and go to state 2
    SECTIONDIR  shift, and go to state 3
    WORDDIR     shift, and go to state 4
    SKIPDIR     shift, and go to state 5
    ENDDIR      shift, and go to state 6
    HALT        shift, and go to state 7
    INT         shift, and go to state 8
    IRET        shift, and go to state 9
    CALL        shift, and go to state 10
    RET         shift, and go to state 11
    JMP         shift, and go to state 12
    BEQ         shift, and go to state 13
    BNE         shift, and go to state 14
    BGT         shift, and go to state 15
    PUSH        shift, and go to state 16
    POP         shift, and go to state 17
    XCHG        shift, and go to state 18
    ADD         shift, and go to state 19
    SUB         shift, and go to state 20
    MUL         shift, and go to state 21
    DIV         shift, and go to state 22
    NOT         shift, and go to state 23
    AND         shift, and go to state 24
    OR          shift, and go to state 25
    XOR         shift, and go to state 26
    SHL         shift, and go to state 27
    SHR         shift, and go to state 28
    LD          shift, and go to state 29
    ST          shift, and go to state 30
    CSRRD       shift, and go to state 31
    CSRWR       shift, and go to state 32
    ENDL        shift, and go to state 33

    directive_or_instruction  go to state 81
    directive                 go to state 39
    instruction               go to state 40
    no_param_instr            go to state 41
    branch_instr              go to state 42
    stack_instr               go to state 43
    atomic_swap               go to state 44
    arithmetic_gpr2           go to state 45
    arithmetic_gpr1           go to state 46
    ld_st_instr               go to state 47
    csr_instr                 go to state 48


State 38

    3 line: directive_or_instruction .

    $default  reduce using rule 3 (line)


State 39

    6 directive_or_instruction: directive .

    $default  reduce using rule 6 (directive_or_instruction)


State 40

    7 directive_or_instruction: instruction .

    $default  reduce using rule 7 (directive_or_instruction)


State 41

   15 instruction: no_param_instr .

    $default  reduce using rule 15 (instruction)


State 42

   18 instruction: branch_instr . REG COMMA REG COMMA operand_jmp

    REG  shift, and go to state 82


State 43

   19 instruction: stack_instr .

    $default  reduce using rule 19 (instruction)


State 44

   24 instruction: atomic_swap .

    $default  reduce using rule 24 (instruction)


State 45

   20 instruction: arithmetic_gpr2 . REG COMMA REG

    REG  shift, and go to state 83


State 46

   21 instruction: arithmetic_gpr1 . REG

    REG  shift, and go to state 84


State 47

   22 instruction: ld_st_instr .

    $default  reduce using rule 22 (instruction)


State 48

   23 instruction: csr_instr .

    $default  reduce using rule 23 (instruction)


State 49

   59 symbol: IDENT .

    $default  reduce using rule 59 (symbol)


State 50

   60 symbols: symbol .

    $default  reduce using rule 60 (symbols)


State 51

    9 directive: GLOBALDIR symbols .
   61 symbols: symbols . COMMA symbol

    COMMA  shift, and go to state 85

    $default  reduce using rule 9 (directive)


State 52

   10 directive: EXTERNDIR symbols .
   61 symbols: symbols . COMMA symbol

    COMMA  shift, and go to state 85

    $default  reduce using rule 10 (directive)


State 53

   11 directive: SECTIONDIR symbol .

    $default  reduce using rule 11 (directive)


State 54

   65 literal: PLUS . NUMBER

    NUMBER  shift, and go to state 86


State 55

   66 literal: MINUS . NUMBER

    NUMBER  shift, and go to state 87


State 56

   64 literal: NUMBER .

    $default  reduce using rule 64 (literal)


State 57

   61 symbols: symbols . COMMA symbol
   67 symbols_literals: symbols .

    COMMA  shift, and go to state 85

    $default  reduce using rule 67 (symbols_literals)


State 58

   63 literals: literals . COMMA literal
   68 symbols_literals: literals .

    COMMA  shift, and go to state 88

    $default  reduce using rule 68 (symbols_literals)


State 59

   62 literals: literal .

    $default  reduce using rule 62 (literals)


State 60

   12 directive: WORDDIR symbols_literals .

    $default  reduce using rule 12 (directive)


State 61

   13 directive: SKIPDIR literal .

    $default  reduce using rule 13 (directive)


State 62

   16 instruction: CALL operand_jmp .

    $default  reduce using rule 16 (instruction)


State 63

   33 operand_jmp: symbol .

    $default  reduce using rule 33 (operand_jmp)


State 64

   32 operand_jmp: literal .

    $default  reduce using rule 32 (operand_jmp)


State 65

   17 instruction: JMP operand_jmp .

    $default  reduce using rule 17 (instruction)


State 66

   35 stack_instr: PUSH REG .

    $default  reduce using rule 35 (stack_instr)


State 67

   34 stack_instr: POP REG .

    $default  reduce using rule 34 (stack_instr)


State 68

   36 atomic_swap: XCHG REG . COMMA REG

    COMMA  shift, and go to state 89


State 69

   55 operand_data: REG .

    $default  reduce using rule 55 (operand_data)


State 70

   51 operand_data: DOLLAR . literal
   52             | DOLLAR . symbol

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    NUMBER  shift, and go to state 56
    IDENT   shift, and go to state 49

    symbol   go to state 90
    literal  go to state 91


State 71

   56 operand_data: LBRACK . REG RBRACK
   57             | LBRACK . REG PLUS literal RBRACK
   58             | LBRACK . REG PLUS symbol RBRACK

    REG  shift, and go to state 92


State 72

   47 ld_st_instr: LD operand_data . COMMA REG

    COMMA  shift, and go to state 93


State 73

   54 operand_data: symbol .

    $default  reduce using rule 54 (operand_data)


State 74

   53 operand_data: literal .

    $default  reduce using rule 53 (operand_data)


State 75

   48 ld_st_instr: ST REG . COMMA operand_data

    COMMA  shift, and go to state 94


State 76

   49 csr_instr: CSRRD CSR . COMMA REG

    COMMA  shift, and go to state 95


State 77

   50 csr_instr: CSRWR REG . COMMA CSR

    COMMA  shift, and go to state 96


State 78

    5 label: IDENT COL .

    $default  reduce using rule 5 (label)


State 79

    0 $accept: prog $end .

    $default  accept


State 80

    2 prog: line prog .

    $default  reduce using rule 2 (prog)


State 81

    4 line: label directive_or_instruction .

    $default  reduce using rule 4 (line)


State 82

   18 instruction: branch_instr REG . COMMA REG COMMA operand_jmp

    COMMA  shift, and go to state 97


State 83

   20 instruction: arithmetic_gpr2 REG . COMMA REG

    COMMA  shift, and go to state 98


State 84

   21 instruction: arithmetic_gpr1 REG .

    $default  reduce using rule 21 (instruction)


State 85

   61 symbols: symbols COMMA . symbol

    IDENT  shift, and go to state 49

    symbol  go to state 99


State 86

   65 literal: PLUS NUMBER .

    $default  reduce using rule 65 (literal)


State 87

   66 literal: MINUS NUMBER .

    $default  reduce using rule 66 (literal)


State 88

   63 literals: literals COMMA . literal

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    NUMBER  shift, and go to state 56

    literal  go to state 100


State 89

   36 atomic_swap: XCHG REG COMMA . REG

    REG  shift, and go to state 101


State 90

   52 operand_data: DOLLAR symbol .

    $default  reduce using rule 52 (operand_data)


State 91

   51 operand_data: DOLLAR literal .

    $default  reduce using rule 51 (operand_data)


State 92

   56 operand_data: LBRACK REG . RBRACK
   57             | LBRACK REG . PLUS literal RBRACK
   58             | LBRACK REG . PLUS symbol RBRACK

    PLUS    shift, and go to state 102
    RBRACK  shift, and go to state 103


State 93

   47 ld_st_instr: LD operand_data COMMA . REG

    REG  shift, and go to state 104


State 94

   48 ld_st_instr: ST REG COMMA . operand_data

    REG     shift, and go to state 69
    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    DOLLAR  shift, and go to state 70
    LBRACK  shift, and go to state 71
    NUMBER  shift, and go to state 56
    IDENT   shift, and go to state 49

    operand_data  go to state 105
    symbol        go to state 73
    literal       go to state 74


State 95

   49 csr_instr: CSRRD CSR COMMA . REG

    REG  shift, and go to state 106


State 96

   50 csr_instr: CSRWR REG COMMA . CSR

    CSR  shift, and go to state 107


State 97

   18 instruction: branch_instr REG COMMA . REG COMMA operand_jmp

    REG  shift, and go to state 108


State 98

   20 instruction: arithmetic_gpr2 REG COMMA . REG

    REG  shift, and go to state 109


State 99

   61 symbols: symbols COMMA symbol .

    $default  reduce using rule 61 (symbols)


State 100

   63 literals: literals COMMA literal .

    $default  reduce using rule 63 (literals)


State 101

   36 atomic_swap: XCHG REG COMMA REG .

    $default  reduce using rule 36 (atomic_swap)


State 102

   57 operand_data: LBRACK REG PLUS . literal RBRACK
   58             | LBRACK REG PLUS . symbol RBRACK

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    NUMBER  shift, and go to state 56
    IDENT   shift, and go to state 49

    symbol   go to state 110
    literal  go to state 111


State 103

   56 operand_data: LBRACK REG RBRACK .

    $default  reduce using rule 56 (operand_data)


State 104

   47 ld_st_instr: LD operand_data COMMA REG .

    $default  reduce using rule 47 (ld_st_instr)


State 105

   48 ld_st_instr: ST REG COMMA operand_data .

    $default  reduce using rule 48 (ld_st_instr)


State 106

   49 csr_instr: CSRRD CSR COMMA REG .

    $default  reduce using rule 49 (csr_instr)


State 107

   50 csr_instr: CSRWR REG COMMA CSR .

    $default  reduce using rule 50 (csr_instr)


State 108

   18 instruction: branch_instr REG COMMA REG . COMMA operand_jmp

    COMMA  shift, and go to state 112


State 109

   20 instruction: arithmetic_gpr2 REG COMMA REG .

    $default  reduce using rule 20 (instruction)


State 110

   58 operand_data: LBRACK REG PLUS symbol . RBRACK

    RBRACK  shift, and go to state 113


State 111

   57 operand_data: LBRACK REG PLUS literal . RBRACK

    RBRACK  shift, and go to state 114


State 112

   18 instruction: branch_instr REG COMMA REG COMMA . operand_jmp

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    NUMBER  shift, and go to state 56
    IDENT   shift, and go to state 49

    operand_jmp  go to state 115
    symbol       go to state 63
    literal      go to state 64


State 113

   58 operand_data: LBRACK REG PLUS symbol RBRACK .

    $default  reduce using rule 58 (operand_data)


State 114

   57 operand_data: LBRACK REG PLUS literal RBRACK .

    $default  reduce using rule 57 (operand_data)


State 115

   18 instruction: branch_instr REG COMMA REG COMMA operand_jmp .

    $default  reduce using rule 18 (instruction)
